// definition
fn printSum(a, b) {
	print a + b;
}

// return
fn returnSum(a, b) {
	return a + b;
}

// call
printSum(400, 20);
print returnSum(60, 9);

// lambdas
var sumLambda = fn (a, b) {
	return a + b;
};
print sumLambda(40, 2);

// TODO: arrow shorthand
// fn returnSum(a, b) => a + b;
// fn(a, b) => a + b;

// closures
fn addPairs(a, b) {
	return a + b;
}
fn identity(a) {
	return a;
}
print identity(addPairs)(1, 2); // => 3

fn outerFunction() {
	fn localFunction () {
		print "I'm local!";
	}
	localFunction();
}
outerFunction();

fn returnFunction() {
	var outside = "outside";
	fn inner() {
		print outside;
	}

	return inner;
}
var foo = returnFunction();
foo();

fn init() {
	return "Uh oh, I'm not a class method!";
}

var notClass = init();
print notClass;

// NOTE: This file is automatically generated!
// See packages/tools/src/lib/generate-ast.ts

import { Token } from './token'

export abstract class Expr {}

export interface Visitor<R> {
}

export class Binary extends Expr {
	readonly left: Expr;
	readonly operator: Token;
	readonly right: Expr;

	constructor(left: Expr, operator: Token, right: Expr) {
		super();
		this.left = left;
		this.operator = operator;
		this.right = right;
	}
}

export class Grouping extends Expr {
	readonly expression: Expr;

	constructor(expression: Expr) {
		super();
		this.expression = expression;
	}
}

export class Literal extends Expr {
	readonly value: any;

	constructor(value: any) {
		super();
		this.value = value;
	}
}

export class Unary extends Expr {
	readonly operator: Token;
	readonly right: Expr;

	constructor(operator: Token, right: Expr) {
		super();
		this.operator = operator;
		this.right = right;
	}
}

